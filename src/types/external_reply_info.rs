use serde::{Deserialize, Serialize};
use crate::types::{
    chat::Chat,
    message_origin::MessageOrigin,
    link_preview_options::LinkPreviewOptions,
    animation::Animation,
    audio::Audio,
    document::Document,
    photo_size::PhotoSize,
    sticker::Sticker,
    story::Story,
    video::Video,
    video_note::VideoNote,
    voice::Voice,
    contact::Contact,
    dice::Dice,
    game::Game,
    giveaway::Giveaway,
    giveaway_winners::GiveawayWinners,
    invoice::Invoice,
    location::Location,
    poll::Poll,
    venue::Venue,
};


#[derive(Serialize, Deserialize, Debug, Clone)]
pub struct ExternalReplyInfo {
    origin: MessageOrigin,
    chat: Option<Chat>,
    message_id: Option<i64>,
    link_preview_options: Option<LinkPreviewOptions>,
    animation: Option<Animation>,
    audio: Option<Audio>,
    document: Option<Document>,
    photo: Option<Vec<PhotoSize>>,
    sticker: Option<Sticker>,
    story: Option<Story>,
    video: Option<Video>,
    video_note: Option<VideoNote>,
    voice: Option<Voice>,
    has_media_spoiler: Option<bool>,
    contact: Option<Contact>,
    dice: Option<Dice>,
    game: Option<Game>,
    giveaway: Option<Giveaway>,
    giveaway_winners: Option<GiveawayWinners>,
    invoice: Option<Invoice>,
    location: Option<Location>,
    poll: Option<Poll>,
    venue: Option<Venue>,
}
